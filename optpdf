#!/bin/bash
#
# optpdf file.pdf
#   This script will attempt to optimize the given pdf
# https://tex.stackexchange.com/questions/18987

IFS=$'\n'
RNDSFX=""

# Default values
pdf_files=()

# Usage function
usage() {
    script_name=$(basename "$0")
    echo "Usage: $script_name <pdf1> <pdf2> ... <pdfN>"
    echo "Optimize the given pdf"
    echo
    echo "Options:"
    echo "  -t, --temp     add a random suffix to the filename"
    echo "  <pdf1> <pdf2> ... <pdfN>  Specify one or more pdfs"
    exit 1
}

# Parse command-line options
while [[ "$#" -gt 0 ]]; do
    case $1 in
        -t|--temp)
            RNDSFX="_opt$$"
            shift
            ;;
        *.pdf)  # Check if the argument ends with '.pdf'
            pdf_files+=("$1")  # If it does, add it to the PDF files array
            shift
            ;;
        *)  # Ignore other file types
            shift
            ;;
    esac
done

# Check if mandatory argument is provided
if [[ ${#pdf_files[@]} -eq 0 ]]; then
    usage
fi

current_dir_name=$(basename "$PWD")

echo "Selected File(s) ..."
for ((i=0; i<${#pdf_files[@]}; i++)); do
    printf  "  %2d) %s\n" $((i+1)) ${pdf_files[i]}
done

mkdir -p "/tmp/${current_dir_name}"

# Rest of the script...
# for i in `ls ${pdf_files[@]}`; do
for ((i=0; i<${#pdf_files[@]}; i++)); do
    file="${pdf_files[i]}"
    echo -e "$((i+1))) Optimizing \e[35m$file\e[0m ..."
    filebase="$(basename "$file" .pdf)"
    optfile="/tmp/${current_dir_name}/${filebase}${RNDSFX}.pdf"
    gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dNOPAUSE -dQUIET -dBATCH \
            -sOutputFile="${optfile}" "${file}"
    if [ $? == '0' ]; then
        optsize=$(stat -c "%s" "${optfile}")
        orgsize=$(stat -c "%s" "${file}")
        if [ "${optsize}" -eq 0 ]; then
            echo -e "╚══ No output!  Keeping original."
            rm -f "${optfile}"
            continue
        fi
        if [ ${optsize} -ge ${orgsize} ]; then
            echo -e "╚══ \e[;30;47mDidn't make it smaller! Keeping original.\e[0m"
            rm -f "${optfile}"
            continue
        fi
        bytesSaved=$(expr $orgsize - $optsize)
        percent=$(expr $optsize '*' 100 / $orgsize)
        echo -e "╚══ Saving \e[32m$bytesSaved\e[0m bytes (\e[31m${percent}%\e[0m of the original one!)"
        # rm "${file}"
        # mv "${optfile}" "${file}"
    fi
done

rmdir "/tmp/${current_dir_name}" &> /dev/null
